const axios = require("axios");

module.exports = {
  config: {
    name: "baby",
    aliases: ["sim"],
    permission: 0,
    prefix: "both",
    categorie: "AI Chat",
    cooldowns: 5,
    credit: "Developed by Mohammad Nayan",
    usages: [
      `${global.config.PREFIX}bot <message> - Start a chat with the bot.`,
      `${global.config.PREFIX}bot - Receive a random greeting from the bot.`,
    ],
    description: "Engage in conversations with an AI-powered bot!",
  },

  start: async function ({ api, event, args }) {
    const { threadId, message, senderId } = event;
    const usermsg = args.join(" ");

    
    if (!usermsg) {
      const greetings = [
  "‡¶§‡ßÅ‡¶á ‡¶á‡¶ó‡¶®‡ßã‡¶∞ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶¨‡¶∏ ‡¶¨‡ßá‡¶¨‡¶ø ‡¶¨‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ üòé",
  "hum baby bolo",
  "‡¶¨‡ßá‡¶¨‡¶ø ‡¶¨‡ßá‡¶¨‡¶ø ‡¶ñ‡¶æ‡¶∞‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã ‡¶ï‡ßá‡¶® üò°",
  "‡¶ï‡¶ø ‡¶ì‡¶á‡¶õ‡ßá ‡¶¨‡¶≤‡ßã ‡¶¨‡ßá‡¶¨‡¶ø ‡¶ñ‡¶æ‡¶∞‡¶ø ‡¶°‡¶æ‡¶ï‡¶ø‡¶ì ‡¶®‡¶æ ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶§‡ßá‡¶õ‡¶øü•±",
  "‡¶π‡¶Ö‡¶∞‡ßç‡¶• ‡¶Ü‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∞‡ßç‡¶•  ‡¶è‡¶á ‡¶¶‡ßÅ‡¶ü‡ßã ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ ‡¶¨‡¶¶‡¶≤‡ßá ‡¶¶‡ßá‡ßü ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡ßá‡¶∞ ‡¶ö‡¶∞‡¶ø‡¶§‡ßç‡¶∞..!!",
  "‡¶π‡ßÅ‡¶Æ ‡¶¨‡ßá‡¶¨‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶ø ‡¶ì‡¶á‡¶õ‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶®‡ßã ‡¶™‡¶æ‡¶ó‡¶≤ ‡¶®‡¶æ‡¶ï‡¶ø ü§≠",
  "‡¶¨‡ßá‡¶¨‡¶ø i love ‡ßü‡¶â üê±",
  "‡¶Ü‡¶∞‡ßá ‡¶¨‡¶æ‡¶¨‡¶æ, ‡¶Ü‡¶Æ‡¶æ‡¶∞‡ßá ‡¶°‡¶æ‡¶ï‡¶ø‡¶õ ‡¶®‡¶æ ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶ø‡¶ú‡¶ø ‡¶Ü‡¶õ‡¶ø üòí ",
  "‡¶π‡ßÅ‡¶Æ ‡¶ú‡¶æ‡¶® ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßÅ‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ú‡ßá ‡¶§‡¶æ‡¶ï‡¶§‡ßá ‡¶ú‡¶æ‡¶á üò≠",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  ""
];

      const randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];

      const greetingMessage = await api.sendMessage(threadId, {
        text: `@${senderId.split('@')[0]}, ${randomGreeting}`,
        mentions: [senderId],
      }, { quoted: message });

      
      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: greetingMessage.key.id,
        type: "chat"
      });

      return;
    }

    
    try {
      const apis = await axios.get("https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json");
      const apiss = apis.data.api;

      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(usermsg)}`
      );

      const replyText = response.data.data?.msg || "ü§ñ I'm not sure how to respond to that.";

      const sent = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: sent.key.id,
        type: "chat"
      });

    } catch (err) {
      console.error("‚ùå Bot command error:", err);
      return api.sendMessage(threadId, { text: "‚ùå Something went wrong while talking with bot." }, { quoted: message });
    }
  },


  handleReply: async function ({ api, event, handleReply }) {
    
    const { threadId, message, body, senderId } = event;

    try {
      const apis = await axios.get("https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json");
      const apiss = apis.data.api;

      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(body)}`
      );

      const replyText = response.data.data?.msg || "ü§ñ I'm not sure how to respond to that.";

      const sent = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: sent.key.id,
        type: "chat"
      });

    } catch (err) {
      console.error("‚ùå Error in bot handleReply:", err);
      return api.sendMessage(threadId, { text: "‚ùå Failed to continue conversation." }, { quoted: message });
    }
  }
};

